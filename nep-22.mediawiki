<pre>
  NEP: 22
  Title: Contract Update Function
  Author: Owen Zhang <zhangzhihong@ngd.neo.org>, Fernando DÃ­az Toledano <shargon@gmail.com>, Erik Zhang <erik@neo.org>, Roman Khimov <roman@nspcc.ru>
  Type: Standard
  Status: Accepted
  Created: 2021-04-19
</pre>


==Abstract==

This proposal outlines a standard for the NEO blockchain that will provide systems with a generalized interaction mechanism for smart contract update.

==Motivation==

As the NEO blockchain scales, Smart Contract Update will become increasingly important. Update mechanism is already there from initial N3 release. But we haven't summarized that standard. That's why this standard is necessary.

==Specification==

Neo N3 has a native <code>ContractManagement</code> contract that is used for contract deployment and update via <code>deploy</code> and <code>update</code> methods of it. After settling with the new NEF and manifest both of them will invoke a special <code>_deploy</code> method if it's implemented by the contract.

===Methods===

====update====

<pre>
{
  "name": "update",
  "safe": false,
  "parameters": [
    {
      "name": "nefFile",
      "type": "ByteArray"
    },
    {
      "name": "manifest",
      "type": "ByteArray"
    },
    {
      "name": "data",
      "type": "Any"
    }
  ],
  "returntype": "Void"
}
</pre>

This method will be automatically executed by <code>ContractManagement</code> contract when a contract is updated. When <code>update</code> in <code>_deploy</code> is true, <code>ContractManagement</code> contract will update new contract state by this method.

Updating a smart contract MUST have <code>nefFile</code> and<code>manifest.json</code>. It will be passed to <code>_deploy</code>.

The parameter <code>data</code> can be any type of supported parameters for contract-specific purpose. For example some kinds of json parameters can be put into data for specific check.

This function will check whether the <code>signer</code> address equals the <code>owner</code> hash of contract. This function SHOULD use the SYSCALL <code>Neo.Runtime.CheckWitness</code> to verify the <code>signer</code>. Details has been explained in [NEP-30](https://github.com/superboyiii/proposals/blob/upgrade-standard/nep-30.mediawiki).

===References===

https://github.com/neo-project/proposals/blob/master/nep-29.mediawiki

https://github.com/neo-project/proposals/blob/master/nep-30.mediawiki

===Implementation===

* C#: https://github.com/neo-project/neo-devpack-dotnet/blob/003a50095efe88f63f518a0c989921be086409f3/examples/Example.SmartContract.NEP17/SampleNep17Token.cs#L130

* Go: https://github.com/nspcc-dev/neofs-contract/blob/99fb86c35a48ed12017423aa4fee13f7d07fa4c0/contracts/proxy/contract.go#L33
