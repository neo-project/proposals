<pre>
  NEP: <to be assigned>
  Title: P2P Protocol change
  Author: Shargon and Belane
  Type: Standard
  Status: Draft
  Created: 2018-03-07
</pre>

==Abstract==

We believe is necessary a P2P protocol optimization to avoid unnecessary data exchange, reducing the computational consumption, in order to improve and speed up communication between the nodes.

==Motivation==

Improve the P2P protocol to support higher loads, improve the behavior of delayed communications and prioritize consensus messages. We think that is necessary to implement a compression mechanism and safe all bytes that should be possible

==Specification==

TODO

==Rationale==

TODO

==Backwards Compatibility==

TODO

==Test Cases==

TODO

==Implementation==

The current header includes 4 bytes of magic numbers in all messages. 
The proposal try to change this header to 20 bytes only during the initial negotiation of the communication.

 +--------------------------+       +--------------------------------------------------------+
 |   Protocol negotiation   |  ...  |                    Message Protocol                    |  
 +--------------------------+       +--------------------------------------------------------+
 +------+ +-----------------+       +-------+ +---------+ +-----+ +--------------+ +---------+
 | UUID | | Version Message |  ...  | Flags | | Command | | CRC | | Payload Size | | Payload |
 +------+ +-----------------+       +-------+ +---------+ +-----+ +--------------+ +---------+

===Protocol negotiation (20 bytes)===

This is the first message sended, and is checked for continue or disconnect the client.

 +----------------------------+
 |    Protocol negotiation    |
 +----------------------------+
 +------+ +-------------------+
 | UUID | |                   |
 +------+ |  Version Message  |
 | 16 b | |                   |
 +------+ +-------------------+ 
 
* UUID - 16 bytes

We think that is better have unique id (16 bytes) than one integer (4 bytes per message) as currently doing

* Version Message

This message is like Message Protocol with the [VersionPayload](https://github.com/neo-project/neo/blob/master/neo/Network/Payloads/VersionPayload.cs) as Payload

- Version Payload
  Current version payload have Services, we propose to add SSL as service (0x02), for change the TCP to SSLStream

===Message Protocol===

Once this check is made, the communication flow begins as defined below.

 +--------------------------------------------------+
 |                 Message Protocol                 |  
 +--------------------------------------------------+
 +-------+ +---------+ +-----+ +--------+ +---------+
 | Flags | | Command | | CRC | |  Size  | | Payload |
 +-------+ +---------+ +-----+ +--------+ +---------+
 |  1b   | |    1b   | | 2b  | |   4b   | |         |
 +-------+ +---------+ +-----+ +--------+ | n bytes |
 |                   8b                 | |         |
 +--------------------------------------+ +---------+

* Message Flags - 1 byte

The availables MessageFlags are:
  
  - None= 0x00,
  - Compressed = 0x01
  - Urgent = 0x02

* Message Command - 1 byte

Currently the available commands are:
 
  - addr
  - alert
  - block
  - consensus
  - filteradd
  - filterclear
  - filterload
  - getaddr
  - getblocks
  - getdata
  - getheaders
  - headers
  - inv
  - mempool
  - merkleblock
  - ping
  - pong
  - reject
  - tx
  - verack
  - version

* Message CRC - 2 bytes

Message Checksum

* Payload Size - 4 bytes

Payload size

* Payload - X bytes

Payload
