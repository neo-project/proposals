<pre>
  NEP: <to be assigned>
  Title: P2P Protocol change
  Author: Shargon and Belane
  Type: Standard
  Status: Draft
  Created: 2018-03-07
</pre>

==Abstract==

We believe that a P2P protocol optimization is necessary in order to avoid unnecessary data exchange between nodes.
In this sense, reducing the computational consumption and, consequently, improving and speeding up the communication between nodes.

==Motivation==

Improve the P2P protocol to support higher loads, as well as improving the communication speed and prioritizing consensus messages. 
In addition, we think that it is necessary to implement a compression mechanism and save all bytes that should be possible.

==Specification==

TODO

==Rationale==

TODO

==Backwards Compatibility==

TODO

==Test Cases==

TODO

==Implementation==

The current header includes a magic number of 4 bytes in all messages. 
With this current proposal, this header is sent only during the initial negotiation of the communication, avoiding message overload.

 +--------------------------------+       +------------------------------------------------+
 |      Protocol negotiation      |  ...  |                Message Protocol                |  
 +--------------------------------+       +------------------------------------------------+
 +------------+ +-----------------+       +-------+ +---------+ +--------------+ +---------+
 | MagicBytes | | Version Message |  ...  | Flags | | Command | | Payload Size | | Payload |
 +------------+ +-----------------+       +-------+ +---------+ +--------------+ +---------+

===Protocol negotiation===

This is the first message sent, the protocol magic number is evaluated to establish the connection or disconnect the client.

 +----------------------------------+
 |       Protocol negotiation       |
 +----------------------------------+
 +------------+ +-------------------+
 | MagicBytes | |                   |
 +------------+ |  Version Message  |
 |     4 b    | |                   |
 +------------+ +-------------------+ 

* Magic Bytes - 4 bytes

This integer must be defined on protocol.json as NEO protocol ID.

* Version Message

This field is a ''Message Protocol'' with the ''Command'' defined as ''version''. The payload attributed to this message is ''VersionPayload'' as defined [https://github.com/neo-project/neo/blob/master/neo/Network/Payloads/VersionPayload.cs here].

<pre>
Version Payload

Current version payload has Services field, we propose to change it to Enum Type and add SSL as possible value (0x02). With this value SSLStream will be used instead of NetworkStream.
</pre>

===Message Protocol===

Once this check is made, the communication flow begins as defined below.

 +-------------------------------------------+
 |              Message Protocol             |  
 +-------------------------------------------+
 +-------+ +---------+ +---------+ +---------+
 | Flags | | Command | | VarSize | | Payload |
 +-------+ +---------+ +---------+ +---------+
 |  1b   | |    1b   | |  1-5b   | |         |
 +-------+ +---------+ +---------+ | n bytes |
 |               8b              | |         |
 +-------------------------------+ +---------+

* Message Flags - 1 byte

The availables MessageFlags are:
  
  - None = 0x00,
  - Compressed = 0x01

* Message Command - 1 byte

Currently the available commands are:
 
  - addr
  - alert
  - block
  - consensus
  - filteradd
  - filterclear
  - filterload
  - getaddr
  - getblocks
  - getdata
  - getheaders
  - headers
  - inv
  - mempool
  - merkleblock
  - ping
  - pong
  - reject
  - tx
  - verack
  - version

* Payload Size - dynamic size, from 1 to 5 bytes

Payload size. Integer (little-endian).

* Payload - n bytes

This field contains the message data.
